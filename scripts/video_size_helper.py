#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –±–æ–ª—å—à–∏—Ö –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, str(Path(__file__).parent.parent))

from modules.youtube_downloader.utils import YouTubeDownloader
from loguru import logger

def main():
    """–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞"""
    
    logger.info("üé¨ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–∑–º–µ—Ä–æ–º —Ñ–∞–π–ª–∞...")
    
    # –ù–∞—Ö–æ–¥–∏–º –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª
    downloader = YouTubeDownloader()
    video_cache_dir = downloader.shared_video_cache_dir
    
    large_files = []
    for file_path in video_cache_dir.glob("*.mp4"):
        file_size_mb = file_path.stat().st_size / (1024*1024)
        if file_size_mb > 50:
            large_files.append((file_path, file_size_mb))
    
    if not large_files:
        logger.info("‚úÖ –§–∞–π–ª–æ–≤ –±–æ–ª—å—à–µ 50 –ú–ë –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–∞–∑–º–µ—Ä—É (–±–æ–ª—å—à–∏–µ –ø–µ—Ä–≤—ã–º–∏)
    large_files.sort(key=lambda x: x[1], reverse=True)
    
    logger.info(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(large_files)} –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤:")
    
    for i, (file_path, file_size_mb) in enumerate(large_files, 1):
        logger.info(f"\nüìÅ {i}. {file_path.name}")
        logger.info(f"üì¶ –†–∞–∑–º–µ—Ä: {file_size_mb:.1f} –ú–ë")
        
        print(f"\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ñ–∞–π–ª–∞ '{file_path.name}':")
        print(f"üìä –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: {file_size_mb:.1f} –ú–ë (–ª–∏–º–∏—Ç Telegram: 50 –ú–ë)")
        print()
        print("üí° –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è:")
        print("1. üéµ –°–∫–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ (–æ–±—ã—á–Ω–æ 3-10 –ú–ë)")
        print("2. üì± –°–∫–∞—á–∞—Ç—å –≤ –±–æ–ª–µ–µ –Ω–∏–∑–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ (360p –∏–ª–∏ 480p)")  
        print("3. üîß –°–∂–∞—Ç—å –≤–∏–¥–µ–æ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 10-15 –º–∏–Ω—É—Ç)")
        print("4. üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å (–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∑–æ–∫)")
        print("5. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –∏–∑ –∫—ç—à–∞")
        print()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
        video_id = None
        for part in file_path.name.split('['):
            if len(part) == 12 and part.endswith(']'):
                video_id = part[:-1]
                break
        
        if video_id:
            print("üìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
            print(f"   –ê—É–¥–∏–æ:      python3 -c \"from modules.youtube_downloader.utils import *; import asyncio; d=YouTubeDownloader(); asyncio.run(d.download_audio('https://youtu.be/{video_id}'))\"")
            print(f"   360p:       python3 -c \"from modules.youtube_downloader.utils import *; import asyncio; d=YouTubeDownloader(); asyncio.run(d.download_video('https://youtu.be/{video_id}', '360p'))\"")
            print(f"   –°–∂–∞—Ç–∏–µ:     python3 scripts/compress_video_for_telegram.py \"{file_path}\"")
            print(f"   –£–¥–∞–ª–µ–Ω–∏–µ:   rm \"{file_path}\"")
        
        print("\n" + "="*80)

if __name__ == "__main__":
    main()
