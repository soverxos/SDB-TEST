# core/admin/logs_viewer/handlers_logs.py
from aiogram import Router, types, F
from loguru import logger

from core.ui.callback_data_factories import AdminMainMenuNavigate # –ü—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –±—É–¥–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—è
from core.admin.filters_admin import can_view_admin_panel_filter
# from .keyboards_logs import ...

from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from core.services_provider import BotServicesProvider

logs_viewer_router = Router(name="sdb_admin_logs_viewer_handlers")
MODULE_NAME_FOR_LOG = "AdminLogsViewer"

#logs_viewer_router.callback_query.filter(can_view_admin_panel_filter)

# –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Ä–∞–∑–¥–µ–ª –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
# –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –≤ AdminMainMenuNavigate —É –Ω–∞—Å –±—É–¥–µ—Ç target_section="logs_view"
@logs_viewer_router.callback_query(AdminMainMenuNavigate.filter(F.target_section == "logs_view"))
async def cq_admin_logs_view_start(
    query: types.CallbackQuery,
    # callback_data: AdminMainMenuNavigate, # –ï—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ callback
    services_provider: 'BotServicesProvider'
):
    admin_user_id = query.from_user.id
    logger.info(f"[{MODULE_NAME_FOR_LOG}] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {admin_user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ (—Ä–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ).")
    
    # TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, PERMISSION_CORE_SYSTEM_VIEW_LOGS_BASIC
    
    # text = "üõ†Ô∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Å–∏—Å—Ç–µ–º—ã\n\n–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."
    # keyboard = ... # –°–¥–µ–ª–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã –æ–ø—Ü–∏–∏ (–≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞, —Ñ–∏–ª—å—Ç—Ä—ã –∏ —Ç.–¥.)
    # await query.message.edit_text(text, reply_markup=keyboard)
    await query.answer("–†–∞–∑–¥–µ–ª –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.", show_alert=True)