# core/admin/logs_viewer/keyboards_logs.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from loguru import logger
from typing import List, Dict, Any

from core.ui.callback_data_factories import AdminLogsViewerNavigate, AdminMainMenuNavigate

async def get_logs_main_keyboard(log_files: List[Dict[str, Any]]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    if log_files:
        for log_file in log_files:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏ —Ä–∞–∑–º–µ—Ä
            display_text = f"üìÑ {log_file['name']} ({log_file['size_formatted']})"
            callback_data = AdminLogsViewerNavigate(action="view_file", payload=log_file['name']).pack()
            builder.button(text=display_text, callback_data=callback_data)
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    builder.row(
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
            callback_data=AdminMainMenuNavigate(target_section="main_admin").pack()
        )
    )
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return builder.as_markup()

async def get_log_file_keyboard(file_name: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å —Ñ–∞–π–ª–æ–º –ª–æ–≥–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    builder.button(
        text="üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ",
        callback_data=AdminLogsViewerNavigate(action="view_content", payload=file_name).pack()
    )
    
    # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    builder.button(
        text="üì• –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª",
        callback_data=AdminLogsViewerNavigate(action="download", payload=file_name).pack()
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª–æ–≤
    builder.row(
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª–æ–≤",
            callback_data=AdminLogsViewerNavigate(action="back_to_main").pack()
        )
    )
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return builder.as_markup()

async def get_log_content_keyboard(file_name: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    builder.button(
        text="üì• –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª",
        callback_data=AdminLogsViewerNavigate(action="download", payload=file_name).pack()
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
    builder.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ",
        callback_data=AdminLogsViewerNavigate(action="view_file", payload=file_name).pack()
    )
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª–æ–≤
    builder.row(
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª–æ–≤",
            callback_data=AdminLogsViewerNavigate(action="back_to_main").pack()
        )
    )
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return builder.as_markup() 