#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
"""

import asyncio
import sys
import pytest
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from modules.security_integrations import SecurityIntegrations

@pytest.mark.asyncio
async def test_security_integrations():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    print("üîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    
    async with SecurityIntegrations() as si:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
        print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:")
        system_info = si.get_system_info()
        print(f"  –û–°: {system_info['os']}")
        print(f"  Root: {system_info['is_root']}")
        print(f"  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: {system_info['is_container']}")
        print(f"  –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: {system_info['available_tools']}")
        
        # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º nmap
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Nmap:")
        nmap_result = await si.nmap_scan("localhost", "quick")
        print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç: {nmap_result}")
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º OpenSSL
        print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenSSL:")
        openssl_result = await si.openssl_scan("google.com", 443)
        print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç: {openssl_result}")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞—É–¥–∏—Ç
        print("\nüîç –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞—É–¥–∏—Ç:")
        audit_result = await si.comprehensive_audit("localhost")
        print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç: {audit_result}")

if __name__ == "__main__":
    asyncio.run(test_security_integrations()) 