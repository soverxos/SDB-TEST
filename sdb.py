# --- –ù–ê–ß–ê–õ–û –§–ê–ô–õ–ê sdb.py (–∏ sdb) ---
#!/usr/bin/env python3

import sys
from pathlib import Path

# –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
current_script_path = Path(__file__).resolve()
project_root = current_script_path.parent
if str(project_root) not in sys.path:
    sys.path.insert(0, str(project_root))

try:
    import typer
    from rich.console import Console
except ImportError as e:
    print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: Typer –∏–ª–∏ Rich –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. {e}", file=sys.stderr)
    print(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt", file=sys.stderr)
    sys.exit(1)

# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π CLI-–æ–±—ä–µ–∫—Ç
cli_main_app = typer.Typer(
    name="sdb",
    help="üöÄ [bold cyan]SwiftDevBot CLI[/] - –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º SDB!",
    rich_markup_mode="rich",
    no_args_is_help=True,
    context_settings={"help_option_names": ["-h", "--help"]}
)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏ –≥—Ä—É–ø–ø—ã
try:
    # –ì—Ä—É–ø–ø—ã –∫–æ–º–∞–Ω–¥ (Typer-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
    from cli.config import config_app
    from cli.db import db_app
    from cli.module import module_app
    from cli.user import user_app
    from cli.backup import backup_app
    from cli.system import system_app
    from cli.bot import bot_app
    from cli.monitor import monitor_app
    from cli.utils import utils_app
    from cli.security import security_app
    from cli.notifications import notifications_app
    
    cli_main_app.add_typer(config_app, name="config", help="üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π.")
    cli_main_app.add_typer(db_app, name="db", help="üóÑÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.")
    cli_main_app.add_typer(module_app, name="module", help="üß© –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏.")
    cli_main_app.add_typer(user_app, name="user", help="üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.")
    cli_main_app.add_typer(backup_app, name="backup", help="üíæ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—ç–∫–∞–ø–∞–º–∏.")
    cli_main_app.add_typer(system_app, name="system", help="üõ†Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.")
    cli_main_app.add_typer(bot_app, name="bot", help="ü§ñ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å Bot API.")
    cli_main_app.add_typer(monitor_app, name="monitor", help="üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞.")
    cli_main_app.add_typer(utils_app, name="utils", help="üõ†Ô∏è –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.")
    cli_main_app.add_typer(security_app, name="security", help="üîí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é.")
    cli_main_app.add_typer(notifications_app, name="notifications", help="üîî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏.")

    # –û—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    from cli.run import run_command
    from cli.process import stop_command, status_command, restart_command

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è
    cli_main_app.command("run")(run_command)
    cli_main_app.command("start", help="üöÄ –ü—Å–µ–≤–¥–æ–Ω–∏–º –¥–ª—è 'run'.")(run_command)
    cli_main_app.command("stop", help="üö¶ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞.")(stop_command)
    cli_main_app.command("status", help="üö¶ –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞.")(status_command)
    cli_main_app.command("restart", help="üö¶ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞.")(restart_command)

except ImportError as e:
    console = Console()
    console.print(f"[bold red]–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ CLI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:[/]\n {e}")
    console.print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–∫–∏ 'cli/' –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ –∏ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ.")
    sys.exit(1)


if __name__ == "__main__":
    cli_main_app()
# --- –ö–û–ù–ï–¶ –§–ê–ô–õ–ê sdb.py (–∏ sdb) ---