# modules/youtube_downloader/file_sender.py
"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
"""

import os
from typing import Dict, Any
from aiogram.types import FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from loguru import logger


async def handle_download_help_callback(callback_query: CallbackQuery) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏ –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é"""
    help_text = (
        "üìã **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤**\n\n"
        "üåê **–ß–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):**\n"
        "‚Ä¢ –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ, —Ç–µ–ª–µ—Ñ–æ–Ω–µ, –ø–ª–∞–Ω—à–µ—Ç–µ\n"
        "‚Ä¢ –§–∞–π–ª –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n"
        "üì± **–ù–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:**\n"
        "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –∏–ª–∏ –∫–Ω–æ–ø–∫—É\n"
        "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è\n"
        "‚Ä¢ –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏\n\n"
        "üíª **–ù–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ:**\n"
        "‚Ä¢ –ö–ª–∏–∫–Ω–∏—Ç–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π ‚Üí '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫...'\n"
        "‚Ä¢ –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É\n\n"
        "‚è∞ **–í–∞–∂–Ω–æ:**\n"
        "‚Ä¢ –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 24 —á–∞—Å–∞\n"
        "‚Ä¢ –§–∞–π–ª –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ (–±–µ–∑ —Å–∂–∞—Ç–∏—è)\n"
        "‚Ä¢ –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ"
    )
    
    await callback_query.message.edit_text(
        text=help_text,
        parse_mode="Markdown",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", 
                callback_data="back_to_download"
            )]
        ])
    )
    
    await callback_query.answer()


async def send_file_to_user(bot, user_id: int, file_path: str, title: str, file_size: int) -> Dict[str, Any]:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Telegram –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä aiogram Bot
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
        file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
        title: –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        file_size: –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
        
    Returns:
        dict: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–µ—Ç–æ–¥–µ –¥–æ—Å—Ç–∞–≤–∫–∏
    """
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram –Ω–∞ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (50 –ú–ë)
    MAX_FILE_SIZE = 50 * 1024 * 1024
    
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    file_size_mb = file_size / (1024*1024)
    file_ext = os.path.splitext(file_path)[1].lower()
    
    try:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –º–∞–ª–µ–Ω—å–∫–∏–π - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Telegram
        if file_size <= MAX_FILE_SIZE:
            logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ Telegram: {file_size_mb:.1f} –ú–ë")
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            input_file = FSInputFile(file_path, filename=os.path.basename(file_path))
            
            if file_ext in ['.mp4', '.avi', '.mov', '.mkv', '.webm']:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –≤–∏–¥–µ–æ
                await bot.send_video(
                    chat_id=user_id,
                    video=input_file,
                    caption=f"‚úÖ {title}\nüì¶ –†–∞–∑–º–µ—Ä: {file_size_mb:.1f} –ú–ë"[:1024]
                )
            elif file_ext in ['.mp3', '.wav', '.flac', '.aac', '.ogg', '.m4a']:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –∞—É–¥–∏–æ
                await bot.send_audio(
                    chat_id=user_id,
                    audio=input_file,
                    caption=f"‚úÖ {title}\nüì¶ –†–∞–∑–º–µ—Ä: {file_size_mb:.1f} –ú–ë"[:1024]
                )
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç
                await bot.send_document(
                    chat_id=user_id,
                    document=input_file,
                    caption=f"‚úÖ {title}\nüì¶ –†–∞–∑–º–µ—Ä: {file_size_mb:.1f} –ú–ë"[:1024]
                )
            
            return {
                "success": True,
                "method": "telegram",
                "file_size": file_size,
                "message": f"–§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Telegram ({file_size_mb:.1f} –ú–ë)"
            }
        
        else:
            # –§–∞–π–ª –±–æ–ª—å—à–æ–π - —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä
            logger.info(f"üì¶ –§–∞–π–ª –±–æ–ª—å—à–æ–π ({file_size_mb:.1f} –ú–ë), —Å–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            from .web_server import start_download_server_if_needed
            
            server = await start_download_server_if_needed()
            if not server:
                # –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ SSH
                relative_path = os.path.relpath(file_path, '/root/SwiftDevBot')
                
                message_text = (
                    f"üìÅ **–§–∞–π–ª –≥–æ—Ç–æ–≤, –Ω–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω**\n\n"
                    f"üé¨ **{title}**\n"
                    f"üì¶ **–†–∞–∑–º–µ—Ä:** {file_size_mb:.1f} –ú–ë\n"
                    f"üéØ **–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ** (–±–µ–∑ —Å–∂–∞—Ç–∏—è)\n\n"
                    f"üìÇ **–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:** `{file_path}`\n\n"
                    f"üí° **–°–∫–∞—á–∞–π—Ç–µ —á–µ—Ä–µ–∑ SSH:**\n"
                    f"`scp -P 31201 user@sdb.soverx.top:'{file_path}' ./`"
                )
                
                await bot.send_message(
                    chat_id=user_id,
                    text=message_text,
                    parse_mode="Markdown"
                )
                
                return {
                    "success": True,
                    "method": "ssh_fallback",
                    "file_path": file_path,
                    "file_size": file_size,
                    "message": f"SSH –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ñ–∞–π–ª–∞ ({file_size_mb:.1f} –ú–ë)"
                }
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            safe_filename = os.path.basename(file_path)
            token = server.generate_download_token(
                file_path=file_path,
                filename=safe_filename,
                expire_hours=24
            )
            
            if not token:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
            
            # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥
            download_url = server.get_external_url(token)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π
            message_text = (
                f"üìÅ **–§–∞–π–ª –≥–æ—Ç–æ–≤ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è!**\n\n"
                f"üé¨ **{title}**\n"
                f"üì¶ **–†–∞–∑–º–µ—Ä:** {file_size_mb:.1f} –ú–ë\n"
                f"üéØ **–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ** (–±–µ–∑ —Å–∂–∞—Ç–∏—è)\n\n"
                f"ÔøΩ **–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:**\n"
                f"{download_url}\n\n"
                f"ÔøΩ **–ö–∞–∫ —Å–∫–∞—á–∞—Ç—å:**\n"
                f"1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n"
                f"2. –§–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–Ω–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å—Å—è\n"
                f"3. –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 24 —á–∞—Å–∞\n\n"
                f"üì± **–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ª—é–±–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —Å –±—Ä–∞—É–∑–µ—Ä–æ–º!**"
            )
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text=f"ÔøΩ –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª ({file_size_mb:.1f} –ú–ë)", 
                    url=download_url
                )],
                [InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", 
                    callback_data="download_help"
                )]
            ])
            
            await bot.send_message(
                chat_id=user_id,
                text=message_text,
                reply_markup=keyboard,
                parse_mode="Markdown"
            )
            
            return {
                "success": True,
                "method": "web_download",
                "download_url": download_url,
                "file_path": file_path,
                "file_size": file_size,
                "message": f"–°–æ–∑–¥–∞–Ω–∞ –≤–µ–±-—Å—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è ({file_size_mb:.1f} –ú–ë) - –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ"
            }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {file_path}: {e}")
        
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        await bot.send_message(
            chat_id=user_id,
            text=f"‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞**\n\n"
                 f"üé¨ **{title}**\n"
                 f"üì¶ **–†–∞–∑–º–µ—Ä:** {file_size_mb:.1f} –ú–ë\n"
                 f"üìÇ **–ü—É—Ç—å:** `{file_path}`\n\n"
                 f"‚ö†Ô∏è **–û—à–∏–±–∫–∞:** {str(e)[:200]}...\n\n"
                 f"üí° **–§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø—É—Ç–∏ –≤—ã—à–µ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è**",
            parse_mode="Markdown"
        )
        
        return {
            "success": False,
            "error": str(e),
            "file_size": file_size,
            "file_path": file_path
        }
