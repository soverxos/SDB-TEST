# run_bot.py
# –≠—Ç–æ—Ç —Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram-–±–æ—Ç–∞ SwiftDevBot.

import asyncio
import sys
from pathlib import Path
import os

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sys.path –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ 'core' –∏ –¥—Ä—É–≥–∏—Ö –ø–∞–∫–µ—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ ---
current_script_dir = Path(__file__).resolve().parent
if str(current_script_dir) not in sys.path:
    sys.path.insert(0, str(current_script_dir))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏–∑ —è–¥—Ä–∞
try:
    from core.bot_entrypoint import run_sdb_bot 
except ImportError as e:
    print(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ 'core.bot_entrypoint'.", file=sys.stderr)
    print(f"–û—à–∏–±–∫–∞: {e}", file=sys.stderr)
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤–µ—Ä–Ω–∞ –∏ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —è–¥—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.", file=sys.stderr)
    print(f"–¢–µ–∫—É—â–∏–π sys.path: {sys.path}", file=sys.stderr)
    sys.exit(2)

if __name__ == "__main__":
    exit_code: int = 1 

    try:
        exit_code = asyncio.run(run_sdb_bot())
        
        if exit_code == 0:
            if os.environ.get("SDB_SHOULD_WRITE_PID", "false").lower() != "true":
                print("–ë–æ—Ç SwiftDevBot —à—Ç–∞—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.")
        else:
            if os.environ.get("SDB_SHOULD_WRITE_PID", "false").lower() != "true":
                print(f"–ë–æ—Ç SwiftDevBot –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏: {exit_code}", file=sys.stderr)

    except KeyboardInterrupt:
        if os.environ.get("SDB_SHOULD_WRITE_PID", "false").lower() != "true":
            print("\nü§ñ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (Ctrl+C). –í—ã—Ö–æ–¥...", file=sys.stderr)
        exit_code = 0 
    except ImportError as e_runtime_import:
        print(f"–û–®–ò–ë–ö–ê –ò–ú–ü–û–†–¢–ê –í–û –í–†–ï–ú–Ø –í–´–ü–û–õ–ù–ï–ù–ò–Ø: {e_runtime_import}", file=sys.stderr)
        print("–í–æ–∑–º–æ–∂–Ω–æ, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π.", file=sys.stderr)
        exit_code = 3
    except Exception as e_global:
        print(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ù–ï–û–ë–†–ê–ë–û–¢–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê –ù–ê –í–ï–†–•–ù–ï–ú –£–†–û–í–ù–ï: {type(e_global).__name__}: {e_global}", file=sys.stderr)
        print("–°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ç—Ä–µ–π—Å–±–µ–∫–∞ –æ—à–∏–±–∫–∏.", file=sys.stderr)
        exit_code = 1
    finally:
        pass

    sys.exit(exit_code)